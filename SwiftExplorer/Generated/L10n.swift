// swiftlint:disable all
// Generated using SwiftGen — https://github.com/SwiftGen/SwiftGen

import Foundation

// swiftlint:disable superfluous_disable_command file_length implicit_return prefer_self_in_static_references

// MARK: - Strings

// swiftlint:disable explicit_type_interface function_parameter_count identifier_name line_length
// swiftlint:disable nesting type_body_length type_name vertical_whitespace_opening_braces
internal enum L10n {
  /// Assembly
  internal static let assembly = L10n.tr("SwiftExplorer", "assembly", fallback: "Assembly")
  /// Copy
  internal static let copy = L10n.tr("SwiftExplorer", "copy", fallback: "Copy")
  /// Desktop tool to quickly explore and analyze Swift Intermediate Representation (IR) generated by the LLVM compiler, and also generate assembly code.
  internal static let description = L10n.tr("SwiftExplorer", "description", fallback: "Desktop tool to quickly explore and analyze Swift Intermediate Representation (IR) generated by the LLVM compiler, and also generate assembly code.")
  /// Details
  internal static let details = L10n.tr("SwiftExplorer", "details", fallback: "Details")
  /// Enter the API Key Gemini
  internal static let enterTheApiKeyGemini = L10n.tr("SwiftExplorer", "enterTheApiKeyGemini", fallback: "Enter the API Key Gemini")
  /// Generate
  internal static let generatedButton = L10n.tr("SwiftExplorer", "generatedButton", fallback: "Generate")
  /// LLVM
  internal static let llvm = L10n.tr("SwiftExplorer", "llvm", fallback: "LLVM")
  /// Enter the Swift field
  internal static let messageEmptyField = L10n.tr("SwiftExplorer", "messageEmptyField", fallback: "Enter the Swift field")
  /// OK
  internal static let ok = L10n.tr("SwiftExplorer", "ok", fallback: "OK")
  /// Review
  internal static let review = L10n.tr("SwiftExplorer", "review", fallback: "Review")
  /// Swift
  internal static let swift = L10n.tr("SwiftExplorer", "swift", fallback: "Swift")
  /// SwiftExplorer.strings
  ///   SwiftExplorer
  /// 
  ///   Created by João Lucas on 22/06/24.
  internal static let swiftExplorer = L10n.tr("SwiftExplorer", "swiftExplorer", fallback: "Swift Explorer")
  /// Review the details of the generated LVVM and Assembly
  internal static let titleCompareView = L10n.tr("SwiftExplorer", "titleCompareView", fallback: "Review the details of the generated LVVM and Assembly")
  /// Warning
  internal static let warning = L10n.tr("SwiftExplorer", "warning", fallback: "Warning")
}
// swiftlint:enable explicit_type_interface function_parameter_count identifier_name line_length
// swiftlint:enable nesting type_body_length type_name vertical_whitespace_opening_braces

// MARK: - Implementation Details

extension L10n {
  private static func tr(_ table: String, _ key: String, _ args: CVarArg..., fallback value: String) -> String {
    let format = BundleToken.bundle.localizedString(forKey: key, value: value, table: table)
    return String(format: format, locale: Locale.current, arguments: args)
  }
}

// swiftlint:disable convenience_type
private final class BundleToken {
  static let bundle: Bundle = {
    #if SWIFT_PACKAGE
    return Bundle.module
    #else
    return Bundle(for: BundleToken.self)
    #endif
  }()
}
// swiftlint:enable convenience_type
